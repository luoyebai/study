// #-----------------------------
// #----------------------基本概念|
// #-----------------------------

/// @brief 内容详细请看c++官方文档:
// ?基本概念----https://zh.cppreference.com/w/cpp/language/basic_concepts

//* 简单来说c++编程语言有以下几个重要组成部分
//* A.实体
//* 1.c++实体包括值---诸如123,"123",1.0f,010,0xFF
//* 2.c++实体包括对象---一般用class struct 定义的类型声明定义的实体就是对象
//* 3.c++实体包括函数---函数是把一个语句序列关联到一个名字和零或更多个函数形参的列表的实体。
//* 即多句话对应导一个函数名字,也就是把很多句话变成一个名字或更多参数组成的列表实体
//* 4.c++实体包括引用---这也是c++区别于c的地方之一,引用是一个实体的别名,所以引用在定义时就需要绑定实体
//* 5.c++实体包括类型,类成员,模板,模板特化,形参包(c++11起),命名空间,结构化绑定(c++17起)
//* 这部分实体比较复杂,无需现在了解,其中比较重要的一个是类型!c++中的每一个对象、引用、函数和表达式都会关联一个类型。kf
//* 类型可以分为基础类型，复合类型，或用户定义类型，以及完整或不完整的类型等
//! 注意:宏不是实体

//* B.声明和定义
//* 1.声明可以引入实体，将它们与名字关联起来，并定义其属性。能够定义使用一个实体所需的所有属性的声明是定义。
//* 对任何被ODR使用的非内联函数或变量，程序中必须只含有其一个定义。
//* 2.的定义通常会用到表达式,表达式是运算符和它们的操作数的序列，它指定一项计算。
//* 表达式的求值可以产生一个结果（比如 2 + 2的求值产生结果*4）

//* C.关键字和注释
//* 在c++程序中，一些被称为关键词的词语有着特殊的含义。其它词语可以被用作标识符。在翻译的过程中，注释会被忽略。
//* c++程序也包含字面量，其中的字符的值由字符集与编码指定。程序中的某些特定字符必须通过转义序列表示。
