[DEBUG]	日志系统初始化完毕	test/test.hpp:13	void logTest()	2023-08-08 03:37:17.
[DEBUG]	这是调试信息	test/test.hpp:15	void logTest()	2023-08-08 03:37:17.
----------------编译日期:03:37:13 Aug  9 2023	最后修改者[洛叶白]----------------
[DEBUG]	日志系统初始化完毕	test/test.hpp:13	void logTest()	2023-08-08 03:37:41.
[DEBUG]	这是调试信息	test/test.hpp:15	void logTest()	2023-08-08 03:37:41.
----------------编译日期:03:37:13 Aug  9 2023	最后修改者[洛叶白]----------------
[DEBUG]	日志系统初始化完毕	test/test.hpp:13	void logTest()	2023-08-08 03:38:05.
[DEBUG]	这是调试信息	test/test.hpp:15	void logTest()	2023-08-08 03:38:05.
----------------编译日期:03:38:02 Aug  9 2023	最后修改者[洛叶白]----------------
[DEBUG]	日志系统初始化完毕	test/test.hpp:13	void logTest()	2023-08-08 03:38:26.
[DEBUG]	这是调试信息	test/test.hpp:15	void logTest()	2023-08-08 03:38:26.
----------------编译日期:03:38:02 Aug  9 2023	最后修改者[洛叶白]----------------
[DEBUG]	日志系统初始化完毕	test/test.hpp:13	void logTest()	2023-08-08 03:38:31.
[DEBUG]	这是调试信息	test/test.hpp:15	void logTest()	2023-08-08 03:38:31.
----------------编译日期:03:38:02 Aug  9 2023	最后修改者[洛叶白]----------------
[DEBUG]	日志系统初始化完毕	test/test.hpp:13	void logTest()	2023-08-08 03:39:57.
[DEBUG]	这是调试信息	test/test.hpp:15	void logTest()	2023-08-08 03:39:57.
[DEBUG]	<发布者1号/话题测试>初始化完毕	include/event_manger/publisher.hpp:41	Publisher<T>::Publisher(const std::string&, const std::string&, size_t) [with T = std::__cxx11::basic_string<char>; std::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]	2023-08-08 03:39:57.
[DEBUG]	<发布者2号/另一个话题>初始化完毕	include/event_manger/publisher.hpp:41	Publisher<T>::Publisher(const std::string&, const std::string&, size_t) [with T = int; std::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]	2023-08-08 03:39:57.
[DEBUG]	<发布者2号/另一个话题>停止话题数据发布	include/event_manger/publisher.hpp:53	Publisher<T>::~Publisher() [with T = int]	2023-08-08 03:39:57.
[DEBUG]	<发布者2号/另一个话题>订阅者和发布者都已注销,该话题将被删除	include/event_manger/topic.hpp:386	void BasePubSub<T>::topicPtrRemove() [with T = int]	2023-08-08 03:39:57.
[DEBUG]	<发布者1号/话题测试>停止话题数据发布	include/event_manger/publisher.hpp:53	Publisher<T>::~Publisher() [with T = std::__cxx11::basic_string<char>]	2023-08-08 03:39:57.
[DEBUG]	<发布者1号/话题测试>订阅者和发布者都已注销,该话题将被删除	include/event_manger/topic.hpp:386	void BasePubSub<T>::topicPtrRemove() [with T = std::__cxx11::basic_string<char>]	2023-08-08 03:39:57.
[DEBUG]	<订阅者1号/话题测试>初始化完毕	include/event_manger/topic.hpp:373	void BasePubSub<T>::topicPtrInit() [with T = std::__cxx11::basic_string<char>]	2023-08-08 03:39:58.
[DEBUG]	<订阅者1号/话题测试>退出话题订阅	include/event_manger/subscriber.hpp:47	Subscriber<T>::~Subscriber() [with T = std::__cxx11::basic_string<char>]	2023-08-08 03:39:58.
[DEBUG]	<订阅者1号/话题测试>订阅者和发布者都已注销,该话题将被删除	include/event_manger/topic.hpp:386	void BasePubSub<T>::topicPtrRemove() [with T = std::__cxx11::basic_string<char>]	2023-08-08 03:39:58.
----------------编译日期:03:39:54 Aug  9 2023	最后修改者[洛叶白]----------------
[DEBUG]	日志系统初始化完毕	test/test.hpp:13	void logTest()	2023-08-08 03:40:23.
[DEBUG]	这是调试信息	test/test.hpp:15	void logTest()	2023-08-08 03:40:23.
[DEBUG]	<发布者1号/话题测试>初始化完毕	include/event_manger/publisher.hpp:41	Publisher<T>::Publisher(const std::string&, const std::string&, size_t) [with T = std::__cxx11::basic_string<char>; std::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]	2023-08-08 03:40:23.
[DEBUG]	<发布者2号/另一个话题>初始化完毕	include/event_manger/publisher.hpp:41	Publisher<T>::Publisher(const std::string&, const std::string&, size_t) [with T = int; std::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]	2023-08-08 03:40:23.
[DEBUG]	<发布者2号/另一个话题>停止话题数据发布	include/event_manger/publisher.hpp:53	Publisher<T>::~Publisher() [with T = int]	2023-08-08 03:40:23.
[DEBUG]	<发布者2号/另一个话题>订阅者和发布者都已注销,该话题将被删除	include/event_manger/topic.hpp:386	void BasePubSub<T>::topicPtrRemove() [with T = int]	2023-08-08 03:40:23.
[DEBUG]	<发布者1号/话题测试>停止话题数据发布	include/event_manger/publisher.hpp:53	Publisher<T>::~Publisher() [with T = std::__cxx11::basic_string<char>]	2023-08-08 03:40:23.
[DEBUG]	<发布者1号/话题测试>订阅者和发布者都已注销,该话题将被删除	include/event_manger/topic.hpp:386	void BasePubSub<T>::topicPtrRemove() [with T = std::__cxx11::basic_string<char>]	2023-08-08 03:40:23.
----------------编译日期:03:40:20 Aug  9 2023	最后修改者[洛叶白]----------------
